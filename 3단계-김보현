# map_direct_save.py
import networkx as nx
import pandas as pd
import matplotlib.pyplot as plt

# 지도 데이터를 그래프 형태로 변환
def create_graph(data):
    G = nx.Graph()
    for i, row in data.iterrows():
        G.add_node(row['structure_id'], pos=(row['x'], row['y']))
    return G

# 건설 현장 위치 제거
def remove_construction_sites(G, data):
    construction_sites = data[data['structure_name'] == 'Construction Site']
    for idx in construction_sites['structure_id']:
        G.remove_node(idx)

# 다익스트라 알고리즘을 이용한 최단 경로 탐색
def find_shortest_path(G, start, end):
    path = nx.shortest_path(G, source=start, target=end, weight='weight')
    return path

# 지도 상에 경로 그리기
def plot_path(data, path):
    fig, ax = plt.subplots(figsize=(10, 10))
    ax.set_xticks(range(1, 21))
    ax.set_yticks(range(1, 21))
    ax.grid(True)

    # 경로 그리기
    path_coords = [(data.loc[data['structure_id'] == node, 'x'].values[0],
                    data.loc[data['structure_id'] == node, 'y'].values[0]) for node in path]
    path_x, path_y = zip(*path_coords)
    ax.plot(path_x, path_y, color='red', linewidth=2, label='Shortest Path')

    # 결과 저장
    plt.savefig('map_final.png')

# 그래프 생성
G = create_graph(area_1_data)

# 건설 현장 제거
remove_construction_sites(G, area_1_data)

# 내 집(시작점)과 반달곰 커피(도착점) 구조물 ID
start_id = area_1_data[area_1_data['structure_name'] == 'Home']['structure_id'].values[0]
end_id = area_1_data[area_1_data['structure_name'] == 'BanDalgom Cafe']['structure_id'].values[0]

# 최단 경로 찾기
shortest_path = find_shortest_path(G, start_id, end_id)

# 최단 경로를 CSV로 저장
path_df = pd.DataFrame(shortest_path, columns=['structure_id'])
path_df.to_csv('home_to_cafe.csv', index=False)

# 최단 경로 지도에 표시
plot_path(area_1_data, shortest_path)
